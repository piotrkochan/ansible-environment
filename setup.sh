#!/usr/bin/env bash

# version="0.1"
#
# This is an optional arguments-only example of Argbash potential
# ARG_VERSION([echo test v$version])
# ARG_HELP([The general script's help msg])
# ARGBASH_GO()
# needed because of Argbash --> m4_ignore([
### START OF CODE GENERATED BY Argbash v2.9.0 one line above ###
# Argbash is a bash code generator used to get arguments parsing right.
# Argbash is FREE SOFTWARE, see https://argbash.io for more info
# Generated online by https://argbash.io/generate


die()
{
	local _ret="${2:-1}"
	test "${_PRINT_HELP:-no}" = yes && print_help >&2
	echo "$1" >&2
	exit "${_ret}"
}


begins_with_short_option()
{
	local first_option all_short_options='vh'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - OPTIONALS


print_help()
{
	printf '%s\n' "The general script's help msg"
	printf 'Usage: %s [-v|--version] [-h|--help]\n' "$0"
	printf '\t%s\n' "-v, --version: Prints version"
	printf '\t%s\n' "-h, --help: Prints help"
}


parse_commandline()
{
	while test $# -gt 0
	do
		_key="$1"
		case "$_key" in
			-v|--version)
				echo test v$version
				exit 0
				;;
			-v*)
				echo test v$version
				exit 0
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
				;;
		esac
		shift
	done
}

parse_commandline "$@"

# OTHER STUFF GENERATED BY Argbash

### END OF CODE GENERATED BY Argbash (sortof) ### ])
# [ <-- needed because of Argbash

installAnsible() {
  . /etc/os-release

  if [ "$ID" == "ubuntu" ]; then
    if [ "$UBUNTU_CODENAME" != "focal" ]; then
      sudo apt install software-properties-common --yes
      sudo apt-add-repository --yes --update ppa:ansible/ansible
    fi
  fi

  if [ "$ID" == "debian" ]; then
    sudo sh -c 'echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main" >> /etc/apt/sources.list'
    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367
    sudo apt update
  fi

  sudo apt install ansible --yes
}

checkAnsible() {
  REQUIRED_PKG="ansible"
  PKG_OK=$(dpkg-query -W --showformat='${Status}\n' $REQUIRED_PKG|grep "install ok installed")
  echo Checking for $REQUIRED_PKG: $PKG_OK
  if [ "" = "$PKG_OK" ]; then
    installAnsible
  fi
}

set -x
set -e

checkAnsible
ENV_DIR="$HOME/.autoenv"

rm -rf "$ENV_DIR"
git clone https://github.com/piotrkochan/ansible-environment.git "$ENV_DIR"
ansible-galaxy install -r  "$ENV_DIR/requirements.yml"
ansible-playbook "$ENV_DIR/playbook.yml" --extra-vars "env_user=$(whoami)"

set +x
set +e
# ] <-- needed because of Argbash